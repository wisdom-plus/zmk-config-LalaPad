#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_LAYER   0
#define SECONDARY_LAYER 1
#define TERTIARY_LAYER  2
#define ARROW_LAYER    3
#define SYSTEM_LAYER    4
#define MOUSE_R_LAYER   5
#define SCROLL_R_LAYER  6
#define MOUSE_L_LAYER   7
#define SCROLL_L_LAYER  8

// Mouse Scroll Value

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100

// cirque trackpad input&layer control

&glidepoint_listener_R {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_R_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 5>,
            <&zip_temp_layer MOUSE_R_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_R_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 8>;
    };
};

&glidepoint_listener_L {
    input-processors =
        <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
        <&zip_xy_scaler 3 2>,
        <&zip_temp_layer MOUSE_L_LAYER 500>;

    lowspeedmode {
        layers = <SECONDARY_LAYER>;
        input-processors =
            <&zip_xy_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_X_INVERT | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_xy_scaler 3 4>,
            <&zip_temp_layer MOUSE_L_LAYER 500>;
    };

    scroller {
        layers = <SCROLL_L_LAYER>;
        input-processors =
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform (INPUT_TRANSFORM_XY_SWAP | INPUT_TRANSFORM_Y_INVERT)>,
            <&zip_scroll_scaler 1 6>;
    };
};

/ {
    behaviors {
        // Encoder to Mouse Scroll

        scroll_up_down: sensor_scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
            label = "SCROLL_UP_DOWN";
        };

        scroll_down_up: sensor_scroll_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
            label = "SCROLL_DOWN_UP";
        };

        scroll_left_right: sensor_scroll_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <20>;
            label = "SCROLL_LEFT_RIGHT";
        };

        scroll_right_left: sensor_scroll_right_left {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_RIGHT>, <&msc SCRL_LEFT>;

            tap-ms = <20>;
            label = "SCROLL_RIGHT_LEFT";
        };

        volume_up_down: sensor_volume_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;

            tap-ms = <20>;
            label = "VOLUME_UP_DOWN";
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT>, <&kp COMMA>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "DOT_COMMA";
        };

        pls_minus: pls_minus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            label = "PLS_MINUS";
        };

        allow_pageup: allow_pageup {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp UP>, <&kp PAGE_UP>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEUP";
        };

        allow_pagedown: allow_pagedown {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOWN>, <&kp PAGE_DOWN>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_PAGEDOWN";
        };

        allow_home: allow_home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&kp HOME>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_HOME";
        };

        allow_end: allow_end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp END>;

            mods = <(MOD_LCTL|MOD_RCTL)>;
            label = "ALLOW_END";
        };

        mt2: mod_tap2 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT_LAYER {
            display-name = "Default";
            sensor-bindings = <&scroll_down_up>, <&scroll_up_down>;

            bindings = <
&kp ESC    &kp Q         &kp W         &kp E            &kp R        &kp T          &kp Y          &kp U          &kp I            &kp O       &kp P          &kp AT_SIGN
&kp TAB    &kp A         &kp S         &kp D            &kp F        &kp G          &kp H          &kp J          &kp K            &kp L       &kp SEMICOLON  &kp COLON
&kp LSHFT  &kp Z         &kp X         &kp C            &kp V        &kp B          &kp N          &kp M          &kp COMMA        &kp PERIOD  &kp SLASH      &kp UNDERSCORE
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 2 SPACE      &mo 1        &lt 3 LANG2    &lt 3 LANG1    &kp BACKSPACE  &lt 4 ENTER      &kp LEFT    &kp DOWN       &kp RIGHT
                         &allow_end    &allow_pagedown  &allow_home  &allow_pageup  &allow_pageup  &allow_home    &allow_pagedown  &allow_end
            >;
        };

        NUM {
            display-name = "secondary_layer";
            sensor-bindings = <&scroll_left_right>, <&scroll_left_right>;

            bindings = <
&trans          &kp F9  &kp F10  &kp F11  &kp F12  &trans    &kp PAGE_UP    &kp NUMBER_7   &kp NUMBER_8  &kp NUMBER_9  &kp PLUS      &kp MINUS
&trans          &kp F5  &kp F6   &kp F7   &kp F8   &trans    &kp HOME       &kp NUMBER_4   &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp SLASH
&trans          &kp F1  &kp F2   &kp F3   &kp F4   &trans    &kp PAGE_DOWN  &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL     &kp COLON
&kp LEFT_SHIFT  &trans  &trans   &trans   &trans   &kp CAPS  &trans         &kp BACKSPACE  &kp NUMBER_0  &trans        &trans        &kp RIGHT_SHIFT
                        &trans   &trans   &trans   &trans    &trans         &trans         &trans        &trans
            >;
        };

        SYMBOL {
            display-name = "tertiary_layer";
            bindings = <
&trans  &kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH   &kp DOLLAR  &kp PERCENT  &kp SQT      &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE        &trans
&trans  &kp BACKSLASH    &kp PLUS           &kp MINUS  &kp EQUAL   &kp SLASH    &kp AT_SIGN  &kp LEFT_BRACKET   &kp RIGHT_BRACKET     &kp LEFT_BRACE         &kp RIGHT_BRACE  &trans
&trans  &trans           &trans             &trans     &trans      &trans       &kp PIPE     &kp SEMICOLON      &kp COLON             &kp QUESTION           &kp UNDERSCORE   &trans
&trans  &trans           &trans             &trans     &trans      &trans       &trans       &kp COMMA          &kp PERIOD            &trans                 &trans           &trans
                         &trans             &trans     &trans      &trans       &trans       &trans             &trans                &trans
            >;
        };

        ARROW {
            bindings = <
&trans          &kp ESCAPE  &mkp MB4                &kp UP_ARROW    &mkp MB5                 &trans   &kp RG(LEFT_ARROW)          &kp RA(LEFT_ARROW)      &kp UP_ARROW    &kp RA(RIGHT_ARROW)      &kp RG(RIGHT_ARROW)          &trans
&trans          &kp HOME    &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &kp RC(RS(TAB))             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp RC(TAB)                  &trans
&kp LEFT_SHIFT  &trans      &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &kp RA(RG(RC(LEFT_ARROW)))  &kp RA(RG(LEFT_ARROW))  &kp RA(RG(F))   &kp RG(RA(RIGHT_ARROW))  &kp RA(RC(RG(RIGHT_ARROW)))  &trans
&trans          &trans      &trans                  &trans          &trans                   &trans   &trans                      &trans                  &kp BACKSPACE   &trans                   &trans                       &trans
                            &trans                  &trans          &trans                   &trans   &trans                      &trans                  &trans          &trans
            >;
        };

        SYSTEM_LAYER {
            display-name = "system_layer";
            sensor-bindings = <&scroll_down_up>, <&volume_up_down>;

            bindings = <
&trans  &trans  &trans  &trans  &trans       &trans      &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_SEL 4
&trans  &trans  &trans  &trans  &bootloader  &sys_reset  &sys_reset    &bootloader   &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &trans
&trans  &trans  &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans        &trans          &trans
&trans  &trans  &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans        &trans          &trans
                &trans  &trans  &trans       &trans      &trans        &trans        &trans          &trans
            >;
        };

        MOUSE_R_LAYER {
            display-name = "mouse_r_layer";
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans  &trans  &trans     &trans     &trans     &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans  &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mo 6   &trans
&trans  &trans  &mkp MB5   &mkp MB4   &trans     &trans  &trans  &trans     &mkp MB4   &mkp MB5   &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans  &trans  &trans     &trans     &trans     &trans  &trans
                &trans     &trans     &trans     &trans  &trans  &trans     &trans     &trans
            >;
        };

        SCROLL_R_LAYER {
            display-name = "scroll_r_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        MOUSE_L_LAYER {
            display-name = "mouse_l_layer";
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mo 8   &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp MB5   &mkp MB4   &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans
            >;
        };

        SCROLL_L_LAYER {
            display-name = "scroll_l_layer";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
